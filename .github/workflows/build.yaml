name: Load osu players data and build users.json to later upload it to a google sheet

on:
  workflow_dispatch:
    inputs:
      isForce:
        description: Force update?
        type: boolean
        default: false
      day:
        description: manual date
        type: text
        required: false 
  schedule:
    - cron: "23 12 1,2,5 * *"

jobs:
  check_tag:
    environment: release
    runs-on: ubuntu-latest
    outputs:
      NOW: ${{env.NOW}}
      DAY: ${{env.DAY}}
      tag_exists: ${{ steps.checkTag.outputs.exists }}
    steps:
      - name: Store date and month for fetching current data
        run: echo "NOW=$(date +"%Y_%m")" >> $GITHUB_ENV
      - name: Export day of workflow if not null
        if: inputs.day != ''
        run: echo "DAY=${{github.event.inputs.day}}" >> $GITHUB_ENV
      - name: Store current day for fetching data without using that on the tag
        if: inputs.day == ''
        run: echo "DAY=$(date +"%d")" >> $GITHUB_ENV
      - name: Display current date
        run: echo "${{env.NOW}}"
      - name: Check if tag with current month exists
        uses: mukunku/tag-exists-action@v1.2.0
        id: checkTag
        with: 
          tag: "${{env.NOW}}"
      - name: Does tag exist    
        run: echo ${{ steps.checkTag.outputs.exists }}
  delete_tag:
    needs: check_tag
    environment: release
    runs-on: ubuntu-latest
    env:
      NOW: ${{needs.check_tag.outputs.NOW}}
    if: inputs.isForce
    steps:
      - name: Delete tag and release
        uses: dev-drprasad/delete-tag-and-release@v1.0.1
        with:
          tag_name: "${{env.NOW}}"
          github_token: "${{secrets.GITHUB_TOKEN}}"
          
  build_stats:
    needs: check_tag
    environment: release
    runs-on: ubuntu-latest
    env:
      Env: ${{ secrets.ENV }}
      NOW: ${{needs.check_tag.outputs.NOW}}
      DAY: ${{needs.check_tag.outputs.DAY}}
    if: inputs.isForce || needs.check_tag.outputs.tag_exists == 'false'
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4.1.1
      - name: Create .env file
        run: echo "$Env" | base64 -d > ./.env
      - name: Dotenv Action
        uses: falti/dotenv-action@v1.0.4
        with:
          mask-variables: false
      - name: actions-setup-mariadb
        uses: shogo82148/actions-setup-mysql@v1.32.0
        with:
          mysql-version: 10.9
          distribution: mariadb
          root-password: password
          my-cnf: |
            innodb_log_file_size=256MB
            innodb-page-size=32768
            innodb_buffer_pool_size=8GB
            innodb_read_IO_threads=8
            innodb_write_io_threads=4
            innodb_flush_log_at_trx_commit=0
            tmp_table_size=2G
            max_heap_table_size=2G
      - name: Create database
        run: mysql -h127.0.0.1 -uroot  -ppassword -e "CREATE DATABASE osu;"
      - name: show databases
        run: mysql -h127.0.0.1 -uroot  -ppassword -e "show databases;"
      - name: Create data dir
        run: mkdir -p data/ctb
      - name: Loading data
        run: curl "https://data.ppy.sh/${{env.NOW}}_${{env.DAY}}_performance_catch_top_10000.tar.bz2" -o data/ctb.tar.bz2
      - name: Install dependency to unzip
        run: sudo apt install bzip2 -y
      - name: Unzip data
        run: bzip2 -d data/ctb.tar.bz2
      - name: Extract data
        run: tar --exclude='scores.sql' -xvf data/ctb.tar -C data/ctb --strip-components=1 --remove-files
      - name: Replace collate in sql due to incompatibility with mariaDB
        run: sed -i "s/COLLATE=utf8mb4_0900_ai_ci//g" data/ctb/sample_users.sql
      - name: Delete compressed row due to another incompatiblity with mariaDB
        run: sed -i "s/ROW_FORMAT=COMPRESSED//g" data/ctb/osu_beatmap_difficulty_attribs.sql
      - name: Import tables
        run: mysql -h 127.0.0.1 -uroot  -ppassword -D osu -e "SET autocommit=0;"
      - run: mysql -h 127.0.0.1 -uroot  -ppassword -D osu -e "source data/ctb/sample_users.sql"
      - run: mysql -h 127.0.0.1 -uroot  -ppassword -D osu -e "source data/ctb/osu_user_stats_fruits.sql"
      - run: mysql -h 127.0.0.1 -uroot  -ppassword -D osu -e "source data/ctb/osu_beatmaps.sql"
      - run: mysql -h 127.0.0.1 -uroot  -ppassword -D osu -e "source data/ctb/osu_beatmap_difficulty_attribs.sql"
      - run: mysql -h 127.0.0.1 -uroot  -ppassword -D osu -e "source data/ctb/osu_scores_fruits_high.sql"
      - run: mysql -h 127.0.0.1 -uroot  -ppassword -D osu -e "COMMIT;"
      - run: mysql -h 127.0.0.1 -uroot  -ppassword -D osu -e "SET autocommit=1;"
      - name: Structure database for later querying
        run: mysql -h 127.0.0.1 -uroot  -ppassword -D osu -e "source queries/queries.sql"
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install dependencies
        run: npm ci
      - name: Build users.json
        run: npm run start
      - name: Update repository
        uses: EndBug/add-and-commit@v9 # You can change this to use a specific version.
        with:
          author_name: Cavitedev_action
          author_email: carlosvillorat@gmail.com
          message: "${{env.NOW}} Update users.json"
          tag: "${{env.NOW}}"
